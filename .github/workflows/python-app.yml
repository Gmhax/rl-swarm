# This workflow installs Python dependencies, runs tests, and performs linting

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # 💡 TIP: If you want this to run on any branch, change "main" to "*"

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      # ✅ This checks out your code from the repo

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
      # 💡 TIP: You can also test multiple versions using a matrix strategy

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      # 💡 NOTE: You could skip installing flake8/pytest manually if they’re already in requirements.txt

    - name: Lint with flake8
      run: |
        # This stops the build for critical syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

        # This allows the build to pass even with warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      # ⚠️ WARNING: The --exit-zero means the lint step won’t fail even if issues are found.
      # Remove it if you want the CI to fail when there are linting problems.

    - name: Test with pytest
      run: |
        pytest
      # ✅ This runs your unit tests
